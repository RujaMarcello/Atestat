---
components:
  schemas:
    UserDto:
      type: object
      required:
      - lastName
      - firstName
      - email
      - password
      properties:
        type: object
        additionalProperties: true
        id:
          type: string
          minLength: 1
          description: The unique id of each user
        firstName:
          type: string
          minLength: 1
          description: The first name of each user
        lastName:
          type: string
          minLength: 1
          description: The last name of each user
        email:
          type: string
          minLength: 1
          description: The email of each user
        password:
          type: string
          minLength: 1
          description: The password of each user
        userRole: {"$ref":"#/components/schemas/RoleDto"}
      example:
        id: '1'
        firstName: string
        lastName: string
        email: string
        password: 'string'
        userRole:
          id: 0
          name: ADMIN

    LoginResponse:
      type: object
      properties:
        token:
          type: string
          minLength:  1
        message:
          type: string
          minLength:  1

    LoginRequest:
      type: object
      required:
      - email
      - password
      properties:
        email:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 1
      example:
        email: rujamarcello88@outlook.com
        password: mama11
    RoleDto:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
          enum:
            - ADMIN
            - SUPERADMIN
            - USER
            
tags:
  - name: auth-controller
  - name: user-controller

"/login":
  post:
    summary: Login to your account
    tags:
    - auth-controller
    requestBody:
      required: true
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/LoginRequest"
    responses:
      '200':
        description: You are logged
        content:
          application/json:
            schema:
              type: string
      '406':
        description: Wrong email or password
"/register":
  post:
    summary: Create a new account
    tags:
    - auth-controller
    requestBody:
      required: true
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/UserDto"
    responses:
      '200':
        description: The user was successfully created
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserDto"
      '500':
        description: Some server error
"/get-data":
  get:
    summary: Return the list of all users
    tags:
    - auth-controller
    responses:
      '200':
        description: The list of the users
        content:
          aplication/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/UserDto"

"/super-admin":
  get:
    summary:  Return the curent user data.
    parameters:
      - in: header
        name: token
        schema:
          type: string
        required: true
    tags:
    - user-controller
    responses:
      '200':
        description:  OK
        content:
          aplication/json:
            schema:
              "$ref": "#/components/schemas/UserDto"

"/user/current":
  get:
    summary:  Return the curent user data.
    parameters:
      - in: header
        name: token
        schema:
          type: string
        required: true
    tags:
    - user-controller
    responses:
      '200':
        description:  OK
        content:
          aplication/json:
            schema:
              "$ref": "#/components/schemas/UserDto"